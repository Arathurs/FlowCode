{"version":3,"sources":["components/errors/AppErrorBoundary.js","assets/js/helperfunctions.js","components/errors/FlowCodeErrorBoundary.js","components/FlowCodeHeadline.js","components/errors/ColorErrorBoundary.js","components/Color.js","components/ColorList.js","components/FlowCode.js","components/FlowCodeContainer.js","App.js","serviceWorker.js","index.js"],"names":["AppErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","children","React","Component","createRandomRGB","numOne","Math","floor","random","numTwo","numThree","createFiftyRandomColors","colors","i","newRGB","push","FlowCodeErrorBoundary","FlowCodeHeadline","className","onClick","selectedColor","ColorErrorBoundary","Color","open","deselect","bind","select","handleClick","setState","e","newColor","color","preventDefault","prevState","style","backgroundColor","ColorList","map","ref","hash","key","selected","changeColor","FlowCode","startOver","FlowCodeContainer","initialized","removeColor","colorObj","length","createRef","colorReferences","getAllReferences","current","refNode","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oOAEaA,EAAb,kDACC,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,UAAW,GAFR,EADpB,8DAYmBC,EAAOC,GAExBC,QAAQC,IAAR,UAAeH,EAAf,cAA0BC,MAd5B,+BAoBE,OAAGG,KAAKN,MAAMC,SAEN,oDAGDK,KAAKP,MAAMQ,YAzBpB,gDAMiCL,GAE/B,MAAO,CAAED,UAAU,OARrB,GAAsCO,IAAMC,W,OCFtCC,EAAkB,WAEvB,IAAMC,EAASC,KAAKC,MAAoB,IAAdD,KAAKE,UAC7BC,EAASH,KAAKC,MAAoB,IAAdD,KAAKE,UACzBE,EAAWJ,KAAKC,MAAoB,IAAdD,KAAKE,UAG7B,MAFQ,cAAUH,EAAV,YAAoBI,EAApB,YAA8BC,EAA9B,MAKIC,EAA0B,WAItC,IAFA,IAAIC,EAAS,GAELC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IAAMC,EAASV,IACfQ,EAAOG,KAAKD,GAGb,OAAOF,GClBKI,EAAb,kDACC,WAAYvB,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,UAAW,GAFR,EADpB,8DAYmBC,EAAOC,GAExBC,QAAQC,IAAR,UAAeH,EAAf,cAA0BC,MAd5B,+BAoBE,OAAGG,KAAKN,MAAMC,SAEN,oDAGDK,KAAKP,MAAMQ,YAzBpB,gDAMiCL,GAE/B,MAAO,CAAED,UAAU,OARrB,GAA2CO,IAAMC,WCA1C,SAASc,EAAiBxB,GAChC,OACC,oCACC,8CAEA,yBAAKyB,UAAU,SAEd,4BAAQC,QAAS1B,EAAM0B,SAAvB,UAID,yBAAKD,UAAU,kBAEd,4BAAKzB,EAAM2B,cAAN,qBAAoC3B,EAAM2B,eAAkB,qBCb9D,IAAMC,EAAb,kDACC,WAAY5B,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,UAAW,GAFR,EADpB,8DAYmBC,EAAOC,GAExBC,QAAQC,IAAR,UAAeH,EAAf,cAA0BC,MAd5B,+BAoBE,OAAGG,KAAKN,MAAMC,SAEN,mDAGDK,KAAKP,MAAMQ,YAzBpB,gDAMiCL,GAE/B,MAAO,CAAED,UAAU,OARrB,GAAwCO,IAAMC,WCCjCmB,EAAb,kDACG,WAAY7B,GAAQ,IAAD,8BACpB,cAAMA,IACDC,MAAQ,CAAE6B,MAAM,GAErB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBANC,EADtB,uDAYEzB,KAAK4B,SAAS,CACbL,MAAM,MAbT,+BAqBEvB,KAAK4B,SAAS,CACbL,MAAM,MAtBT,kCA0BaM,GAEX,IAAMC,EAAW9B,KAAKP,MAAMsC,MAC5B/B,KAAKP,MAAM0B,QAAQW,GACnBD,EAAEG,mBA9BJ,4CAiCuBC,GAErB,OAAOA,EAAUV,OAASvB,KAAKN,MAAM6B,OAnCvC,+BAwCE,OACC,kBAAC,EAAD,KACC,yBAAKL,UAAWlB,KAAKN,MAAM6B,KAAO,eAAiB,QAASW,MAAO,CAACC,gBAAiBnC,KAAKP,MAAMsC,OAAQZ,QAASnB,KAAK2B,mBA1C1H,GAA2BzB,IAAMC,WCA1B,SAASiC,EAAU3C,GACzB,OAAOA,EAAMmB,OAAOyB,KAAI,SAACN,EAAOlB,GAAR,OAAc,kBAAC,EAAD,CAAOyB,IAAK7C,EAAM8C,KAAKR,GAAQS,IAAK,SAAS3B,EAAGkB,MAAOA,EAAOU,SAAUhD,EAAM2B,cAAeD,QAAS1B,EAAMiD,iBCC5I,SAASC,EAASlD,GAExB,OACC,yBAAKyB,UAAU,aAEd,kBAAC,EAAD,KAEC,kBAACD,EAAD,CAAkBE,QAAS1B,EAAMmD,UAAWxB,cAAe3B,EAAM2B,iBAIlE,kBAAC,EAAD,KAEC,kBAACgB,EAAD,CAAWM,YAAajD,EAAMiD,YAAa9B,OAAQnB,EAAMmB,OAAQ2B,KAAM9C,EAAM8C,SCb1E,IAAMM,EAAb,kDACI,WAAYpD,GAAQ,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACZkB,OAAQ,GACRkC,aAAa,EACb1B,cAAe,KACfmB,KAAM,IAGP,EAAKG,YAAc,EAAKA,YAAYjB,KAAjB,gBACnB,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBACnB,EAAKmB,UAAY,EAAKA,UAAUnB,KAAf,gBAXI,EADvB,6DAekBb,GAEhB,IADA,IAAIoC,EAAW,GACPnC,EAAI,EAAGA,EAAID,EAAOqC,OAAQpC,IAAK,CAEtCmC,EADcpC,EAAOC,IACHX,IAAMgD,YAIzB,OAAOF,IAvBT,0CA4BE,IAAIhD,KAAKN,MAAMoD,YAAa,CAC3B,IAAMlC,EAASD,IACTwC,EAAkBnD,KAAKoD,iBAAiBxC,GAE9CZ,KAAK4B,SAAS,CACbhB,OAAQA,EACRkC,aAAa,EACbP,KAAMY,OAnCV,oCA2CkBnD,KAAKN,MAAM6C,KAAKvC,KAAKN,MAAM0B,eAAeiC,QAClD7B,aA5CV,kCA+CaM,GAEX,IAAMwB,EAAUtD,KAAKN,MAAM6C,KAAKT,GAAUuB,QACvCrD,KAAKN,MAAM0B,eAEbpB,KAAK+C,cACLO,EAAQ5B,SACR1B,KAAK4B,SAAS,CACbR,cAAeU,MAKhBwB,EAAQ5B,SACR1B,KAAK4B,SAAS,CACbR,cAAeU,OA9DnB,kCAqEE,IAAMlB,EAASD,IACTwC,EAAkBnD,KAAKoD,iBAAiBxC,GAC9CZ,KAAK4B,SAAS,CACbhB,OAAQA,EACRkC,aAAa,EACb1B,cAAc,KACdmB,KAAMY,MA3ET,+BAmFK,OACF,kBAAC,EAAD,KACC,kBAACR,EAAD,CAAUC,UAAW5C,KAAK4C,UAAWxB,cAAepB,KAAKN,MAAM0B,cAAeR,OAAQZ,KAAKN,MAAMkB,OAAQ2B,KAAMvC,KAAKN,MAAM6C,KAAMG,YAAa1C,KAAK0C,mBArFtJ,GAAuCxC,IAAMC,WCS9BoD,MATf,WAEC,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCGeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5E,GACLE,QAAQF,MAAMA,EAAM6E,a","file":"static/js/main.bf605117.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class AppErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hasError : false};\r\n\t}\r\n\t\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t\r\n\t\treturn { hasError: true};\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\r\n\t\tconsole.log(`${error} : ${errorInfo}`);\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tif(this.state.hasError) {\r\n\t\t\r\n\t\t\treturn <h1>Something went wrong</h1>;\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children;\r\n\t}\r\n};","const createRandomRGB = () => {\r\n\r\n\tconst numOne = Math.floor(Math.random()*266),\r\n\t  numTwo = Math.floor(Math.random()*266),\r\n\t  numThree = Math.floor(Math.random()*266),\r\n\t  newRGB = `rgb(${numOne},${numTwo},${numThree})`;\r\n\t\r\n\treturn newRGB;\r\n}\r\n\r\nexport const createFiftyRandomColors = () => {\r\n\t\r\n\tlet colors = [];\r\n\t\r\n\tfor(let i = 0; i < 50; i++) {\r\n\t\t\r\n\t\tconst newRGB = createRandomRGB();\r\n\t\tcolors.push(newRGB);\r\n\t}\r\n\t\r\n\treturn colors;\r\n}\r\n","import React from 'react';\r\n\r\nexport class FlowCodeErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hasError : false};\r\n\t}\r\n\t\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t\r\n\t\treturn { hasError: true};\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\r\n\t\tconsole.log(`${error} : ${errorInfo}`);\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tif(this.state.hasError) {\r\n\t\t\r\n\t\t\treturn <h2>Something went wrong</h2>;\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children;\r\n\t}\r\n};","import React from 'react';\r\n\r\nexport function FlowCodeHeadline(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Color Selector</h1>\r\n\t\t\t\r\n\t\t\t<div className='reset'>\r\n\t\t\t\r\n\t\t\t\t<button onClick={props.onClick}>Reset</button>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t<div className=\"selected-color\">\r\n\t\t\t\t\t\r\n\t\t\t\t<h2>{props.selectedColor ? `You picked ${props.selectedColor}` : 'Choose a Color!'}</h2>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\n\r\nexport class ColorErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hasError : false};\r\n\t}\r\n\t\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t\r\n\t\treturn { hasError: true};\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\r\n\t\tconsole.log(`${error} : ${errorInfo}`);\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tif(this.state.hasError) {\r\n\t\t\r\n\t\t\treturn <p>Something went wrong</p>;\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children;\r\n\t}\r\n};","import React from 'react';\r\nimport { ColorErrorBoundary } from './errors/ColorErrorBoundary';\r\n\r\nexport class Color extends React.Component {\r\n  \tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { open: false};\r\n\t\t\r\n\t\tthis.deselect = this.deselect.bind(this);\r\n\t\tthis.select = this.select.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\t\r\n\tdeselect() {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\topen: false\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tselect() {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\topen: true\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleClick(e) {\r\n\t\t\r\n\t\tconst newColor = this.props.color\r\n\t\tthis.props.onClick(newColor);\r\n\t\te.preventDefault();\r\n\t}\r\n\t\r\n\tshouldComponentUpdate(prevState) {\r\n\t\t\r\n\t\treturn prevState.open !== this.state.open;\r\n\t}\r\n\t\r\n\trender() {\r\n        \r\n\t\treturn (\r\n\t\t\t<ColorErrorBoundary>\r\n\t\t\t\t<div className={this.state.open ? 'color select' : 'color'} style={{backgroundColor: this.props.color}} onClick={this.handleClick} />\r\n\t\t\t</ ColorErrorBoundary>\r\n\t\t) ;\r\n    }\r\n}","import React from 'react';\r\nimport { Color } from './Color';\r\n\r\nexport function ColorList(props) {\r\n\treturn props.colors.map((color, i) => <Color ref={props.hash[color]} key={'color_'+i} color={color} selected={props.selectedColor} onClick={props.changeColor}/>);\r\n}","import React from 'react';\r\nimport { FlowCodeErrorBoundary } from './errors/FlowCodeErrorBoundary';\r\nimport { FlowCodeHeadline } from './FlowCodeHeadline';\r\nimport { ColorList } from './ColorList';\r\n\r\nexport function FlowCode(props) {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t\r\n\t\t\t<FlowCodeErrorBoundary>\r\n\t\t\t\t\r\n\t\t\t\t<FlowCodeHeadline onClick={props.startOver} selectedColor={props.selectedColor} />\r\n\t\t\t\r\n\t\t\t</ FlowCodeErrorBoundary>\r\n\t\t\t\r\n\t\t\t<FlowCodeErrorBoundary>\r\n\t\t\t\t\r\n\t\t\t\t<ColorList changeColor={props.changeColor} colors={props.colors} hash={props.hash}/>\r\n\t\t\t\r\n\t\t\t</ FlowCodeErrorBoundary>\r\n\t\t\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport { createFiftyRandomColors } from '../assets/js/helperfunctions'; \r\nimport { FlowCodeErrorBoundary } from './errors/FlowCodeErrorBoundary';\r\nimport { FlowCode } from './FlowCode';\r\n\r\nexport class FlowCodeContainer extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcolors: [],\r\n\t\t\tinitialized: false,\r\n\t\t\tselectedColor: null,\r\n\t\t\thash: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis.changeColor = this.changeColor.bind(this);\r\n\t\tthis.removeColor = this.removeColor.bind(this);\r\n\t\tthis.startOver = this.startOver.bind(this);\r\n\t}\r\n\t\r\n\tgetAllReferences(colors) {\r\n\t\tlet colorObj = {}\r\n\t\tfor(let i = 0; i < colors.length; i++) {\r\n\t\t\tconst color = colors[i];\r\n\t\t\tcolorObj[color] = React.createRef();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn colorObj;\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tif(!this.state.initialized) {\r\n\t\t\tconst colors = createFiftyRandomColors(),\r\n\t\t\t      colorReferences = this.getAllReferences(colors);\t\t\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tcolors: colors,\r\n\t\t\t\tinitialized: true,\r\n\t\t\t\thash: colorReferences\r\n\t\t\t});\r\n\t\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColor() {\r\n\t\t\r\n\t\tconst refNode = this.state.hash[this.state.selectedColor].current;\r\n\t\trefNode.deselect();\r\n\t}\r\n\t\r\n\tchangeColor(newColor) {\r\n\t\t\r\n\t\tconst refNode = this.state.hash[newColor].current;\r\n\t\tif(this.state.selectedColor) {\r\n\t\t\t\r\n\t\t\tthis.removeColor();\r\n\t\t\trefNode.select();\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectedColor: newColor\r\n\t\t\t});\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\trefNode.select();\r\n\t\t\tthis.setState({\t\r\n\t\t\t\tselectedColor: newColor\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tstartOver() {\r\n\t\t\r\n\t\tconst colors = createFiftyRandomColors(),\r\n\t\t      colorReferences = this.getAllReferences(colors);\t\t\r\n\t\tthis.setState({\r\n\t\t\tcolors: colors,\r\n\t\t\tinitialized: true,\r\n\t\t\tselectedColor:null,\r\n\t\t\thash: colorReferences\r\n\t\t});\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\trender() {\r\n       \r\n\t    return (\r\n\t\t\t<FlowCodeErrorBoundary>\r\n\t\t\t\t<FlowCode startOver={this.startOver} selectedColor={this.state.selectedColor} colors={this.state.colors} hash={this.state.hash} changeColor={this.changeColor} />\r\n\t\t\t</ FlowCodeErrorBoundary>\r\n        );   \r\n    }\r\n\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { AppErrorBoundary } from './components/errors/AppErrorBoundary';\r\nimport { FlowCodeContainer } from './components/FlowCodeContainer';\r\n\r\nfunction App () {\r\n\t\r\n\treturn (\r\n\t  <AppErrorBoundary>\r\n\t    <FlowCodeContainer />\r\n\t  </ AppErrorBoundary>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}